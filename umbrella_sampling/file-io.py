# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_file_io.ipynb.

# %% auto 0
__all__ = ['get_casscf_energy_of_state', 'get_cas_tdip_of_states']

# %% ../nbs/01_file_io.ipynb 3
def get_casscf_energy_of_state(
    file: Path,  # Path to TC output file
    state: int,  # State ID (1-indexed)
) -> float:
    """Returns CASSCF energy (in Hatree) of state"""
    with open(file, "r") as f:
        for line in f:
            if f"Singlet state  {state} energy:" in line:
                return float(line.split()[-1])

# %% ../nbs/01_file_io.ipynb 6
def get_cas_tdip_of_states(
    file: Path,  # Path to TC output file
    state1: int,  # State ID (1-indexed)
    state2: int,  # State ID (1-indexed)
) -> float:
    """Returns transition dipole moment (in Debye) between two states"""
    # pattern = r"(\d+) ->  (\d+)([ \t-]+)([\d.-]+)([ \t-]+)([\d.-]+)([ \t-]+)([\d.-]+)([ \t-]+)([\d.-]+)([ \t-]+)([\d.-]+)"
    pattern = r"(\d+) ->  (\d+)([ \t-]+)([-?\d.]+)([ \t-]+)([-?\d.]+)([ \t-]+)([-?\d.]+)([ \t-]+)([-?\d.]+)([ \t-]+)([-?\d.]+)"
    tdip_string = "Singlet state electronic transitions:"
    end_string = "Singlet state velocity transition dipole moments:"
    tdip_section = False
    with open(file, "r") as f:
        for line in f:
            if tdip_string in line:
                tdip_section = True

            if end_string in line:
                tdip_section = False

            if tdip_section:
                match = re.search(pattern, line)
                if match:
                    print(match.groups())
