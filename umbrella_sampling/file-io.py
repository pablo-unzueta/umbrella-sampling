# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_file_io.ipynb.

# %% auto 0
__all__ = ['get_casscf_energy_of_state', 'get_cas_tdip_of_states']

# %% ../nbs/01_file_io.ipynb 3
from pathlib import Path
import re

# %% ../nbs/01_file_io.ipynb 4
def get_casscf_energy_of_state(
    file: Path,  # Path to TC output file
    state: int,  # State ID (1-indexed)
) -> float: # Energy in Hartree
    """Returns CASSCF energy of state"""
    with open(file, "r") as f:
        for line in f:
            if f"Singlet state  {state} energy:" in line:
                return float(line.split()[-1])

# %% ../nbs/01_file_io.ipynb 7
def get_cas_tdip_of_states(
    file: Path,  # Path to TC output file
) -> dict:
    """Returns transition dipole moment information of requested states"""
    tdip_info = []
    # pattern = r"(\d+) ->  (\d+)([ \t-]+)([\d.-]+)([ \t-]+)([\d.-]+)([ \t-]+)([\d.-]+)([ \t-]+)([\d.-]+)([ \t-]+)([\d.-]+)"
    pattern = r"(\d+) ->  (\d+)([ \s*]+)([-?\d.]+)([ \s*]+)([-?\d.]+)([ \s*]+)([-?\d.]+)([ \s*]+)([-?\d.]+)([ \s*]+)([-?\d.]+)"
    tdip_string = "Singlet state electronic transitions:"
    end_string = "Singlet state velocity transition dipole moments:"
    tdip_section = False
    with open(file, "r") as f:
        for line in f:
            if tdip_string in line:
                tdip_section = True

            if end_string in line:
                tdip_section = False

            if tdip_section:
                match = re.search(pattern, line)
                # delete groups with only whitespace
                if match:
                    # match = [m for m in match.groups() if m.strip()]
                    state_1, state_2, _, t_x, _, t_y, _, t_z, _, t_mag, _, osc = match.groups()
                    tdip_info.append({"state1": int(state_1), "state2": int(state_2), "t_x": float(t_x), "t_y": float(t_y), "t_z": float(t_z), "t_mag": float(t_mag), "osc": float(osc)})
    return tdip_info
